# -*- mode: org ; mode: visual-line; coding: utf-8 -*- -*

* What is ErZauker?

Er Zauker is an erlang-based search engine for programming languages. 
Er Zauker is based from ideas taken by old Google Code Search and uses Redis as storage engine.
It is a different implementation of the Code Zauker project.

* How to build
make 
* Try it how
Index the own code,,
#+BEGIN_SRC shell
 make test-indexer
#+END_SRC
then press enter and try
#+BEGIN_SRC erlang
er_zauker_app:erlist("trigram").
#+END_SRC
from the erlang command line.
You will got a list of file which *could* contain the keyword.


** More information on Code Zauker
Please take a look to
 https://github.com/daitangio/code_zauker
for more informations



* How to develop: suggested installation
** On Linux (Debian jessie)
Erlang R17 is needed. We strongly suggest Hipe (native compiler) on a 64bit installation
Install Erlang Hipe and dev libs (use "aptitude versions" to get the complete list).
On Debian the R17 is available only under 'testing' branch (i.e. 1:17.1-dfsg-3)

The minimum required sets depends on your distribution. On Debian try:

With aptitude
#+BEGIN_SRC shell
i   erlang-base-hipe                - Erlang/OTP HiPE enabled virtual machine an
i   erlang-debugger                 - Erlang/OTP application for debugging and t
i   erlang-dev                      - Erlang/OTP development libraries and heade
i   erlang-eunit                    - Erlang/OTP module for unit testing        
i   erlang-snmp                     - Erlang/OTP SNMP applications              
i   erlang-ssh                      - Erlang/OTP implementation of SSH protocol 
i   erlang-syntax-tools             - Erlang/OTP modules for handling abstract E
i   erlang-test-server              - Erlang/OTP server for automated applicatio
i   erlang-xmerl                    - Erlang/OTP XML tools                      
#+END_SRC

Complete list (via =dpkg --get-selections | grep erlang=):

| Package name         | Suggested version              |
| erlang-asn1          | 1:17.1-dfsg-3                  |
| erlang-base-hipe     |                                |
| erlang-crypto        |                                |
| erlang-debugger      |                                |
| erlang-dev           |                                |
| erlang-et            |                                |
| erlang-eunit         | Only for developing            |
| erlang-gs            |                                |
| erlang-inets         |                                |
| erlang-mnesia        |                                |
| erlang-observer      |                                |
| erlang-public-key    |                                |
| erlang-runtime-tools |                                |
| erlang-snmp          |                                |
| erlang-ssh           |                                |
| erlang-ssl           |                                |
| erlang-syntax-tools  |                                |
| erlang-test-server   |                                |
| erlang-tools         |                                |
| erlang-webtool       |                                |
| erlang-wx            |                                |
| erlang-xmerl         |                                |
| erlang-syntax-tools  |                                |
| erlang-pman          | Anyway observer is the new guy |
| erlang-edoc          | Only needed for developing     |

** Unit testing
Use =make eunit=

** New deps:
After adding deps, use 
rebar get-deps compile

* 2013 Diary
Add compatibility with code zauker 0.1.0

fileDigest = Digest::MD5.hexdigest(File.read(filename))
@redis.set("cz:md5:#{filename}",fileDigest)

